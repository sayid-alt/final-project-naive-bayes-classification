# # -*- coding: utf-8 -*-
# """NB-purchasing-ads.ipynb

# Automatically generated by Colaboratory.

# Original file is located at
#     https://colab.research.google.com/drive/17gLoFf00iGZ5R7qwZq2OqJ891pMA0C_2
# """

import joblib
from sklearn.metrics import classification_report
from sklearn.metrics import confusion_matrix
from sklearn.metrics import accuracy_score
from sklearn.naive_bayes import GaussianNB
from sklearn.preprocessing import RobustScaler
from sklearn.model_selection import StratifiedShuffleSplit
from sklearn.preprocessing import LabelEncoder
import os
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt


# """# Load Dataset"""

def load_social_media_data():
    csv_path = os.path.join('social-network-ads/Social_Network_Ads.csv')
    return pd.read_csv(csv_path)


df = load_social_media_data()
df.drop(columns=['User ID'], inplace=True)


# """## Label Encoding"""

le = LabelEncoder()
df['Gender'] = le.fit_transform(df['Gender'])


# there is no correlative of variable gender with another variables
# so we delete it

df.drop(columns=['Gender'], inplace=True)


# """# Split Data"""

sss = StratifiedShuffleSplit(n_splits=5, test_size=0.25, random_state=42)

for train_index, test_index in sss.split(df, df['Purchased']):
    sss_train_set = df.loc[train_index]
    sss_test_set = df.loc[test_index]

sss_train_set.shape, sss_test_set.shape

X_train, y_train = sss_train_set.iloc[:, :-1], sss_train_set.iloc[:, -1]
X_test, y_test = sss_test_set.iloc[:, :-1], sss_test_set.iloc[:, -1]


# """# Feature Scaling"""
sc = RobustScaler()
X_train = sc.fit_transform(X_train)
X_test = sc.transform(X_test)


# """# Train Model"""

gnb = GaussianNB()
gnb.fit(X_train, y_train)


# """# Predict Result"""

y_pred = gnb.predict(X_test)
y_pred

y_pred_proba = gnb.predict_proba(X_test)[:, 1]
y_pred_proba


joblib.dump(gnb, 'gnb_model.pkl')
gnb_model = joblib.load('gnb_model.pkl')

joblib.dump(sc, 'robust_scaler.pkl')
sc = joblib.load('robust_scaler.pkl')
